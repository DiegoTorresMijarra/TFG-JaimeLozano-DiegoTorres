version: '3.8'

services:
  backend:
    build:
      context: ./backApp
      dockerfile: Dockerfile
    container_name: macjava-api-rest
    restart: always
    env_file: ./backApp/.env
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - postgres-db
      - mongo-db

  frontend:
    build:
      context: ./frontApp
      dockerfile: Dockerfile
    container_name: macjava-frontend
    restart: always
    ports:
      - "4200:80"
    networks:
      - app-network
    depends_on:
      - backend

  postgres-db:
    container_name: db_postgres
    image: postgres:12-alpine
    restart: always
    env_file: ./.env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data-volume:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  mongo-db:
    container_name: db_mongo
    image: mongo:5.0
    restart: always
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data-volume:/data/db
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - app-network

volumes:
  postgres-data-volume:
    name: postgres-data-volume
  mongo-data-volume:
    name: mongo-data-volume

networks:
  app-network:
    driver: bridge
