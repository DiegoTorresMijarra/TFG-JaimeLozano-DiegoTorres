spring.config.import=optional:file:.env.devserver[.properties]
spring.application.name=${API_NAME:backApp}
api.version=${API_VERSION:v1}
server.port= ${API_PORT:3000}
server.servlet.context-path=/${api.version:v1}
## MENSAJE DE ERROR EN LAS EXCEPCIONES DE LA API
# Para los mensajes en las excepciones
server.error.include-message=always

# Configuración de conexión a PostgreSQL en Aiven
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}?sslmode=${POSTGRES_SSL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_CONT}
# Habilitamos los mensajes sql en el log para ver las consultas, quitar en produccion
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Configuración de conexión a MongoDB Atlas
spring.data.mongodb.uri=mongodb+srv://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}/?retryWrites=true&w=majority&appName=${MONGO_DATABASE}
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.springframework.data.mongodb.core.MongoOperations=DEBUG

## JWT y Token
##JWT Configuracion de secreto y tiempo de token en segundos (86400 = 24 horas) pon el que quieras
jwt.secret=TokenSecreto!!
jwt.expiration=86400
## SSL
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:cert/server_keystore.p12
# La contrasenaa usada para generar el certificado
server.ssl.key-store-password=1234567
# El alias usado para mapear o referenciar el certificado
server.ssl.key-alias=serverKeyPair
server.ssl.enabled=true

# Files
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB